<?php
/**
 * Created by PhpStorm.
 * User: JC
 * Date: 2016-10-23
 * Time: 17:04
 */

namespace eidng8\Wiki;

use eidng8\Contracts\WikiTextParser;

/**
 * Simple iiki text table parser, doesn't parse sub-templates
 */
class Table implements WikiTextParser
{

    /**
     * Wiki text to be parsed
     *
     * @var string
     */
    protected $wikiText;

    /**
     * The parsed table
     *
     * @var array
     */
    protected $parsed = null;


    /**
     * Table constructor.
     *
     * @param string $wikiText
     */
    public function __construct(string $wikiText)
    {
        $this->wikiText = $wikiText;
        $this->parse();
    }//end __construct()


    public function parse(): array
    {
        if ($this->parsed) {
            return $this->parsed;
        }

        if (empty($this->wikiText)) {
            return [];
        }

        $regex = '/^\s*\{\|.+?^\s*\|}\s*/imsu';
        preg_match($regex, $this->wikiText, $found);
        if (empty($found) || count($found) < 1) {
            return [];
        }
        $this->wikiText = $found[0][0];

        $header = $this->parseHeader();
        $rows = $this->parseRows();

        return $this->parsed = ['header' => $header, 'rows' => $rows];
    }//end parse()


    /**
     * Parse table header
     *
     * @return array
     */
    protected function parseHeader(): array
    {
        $regex = '/(^\s*!.+$)/imu';
        preg_match_all($regex, $this->wikiText, $header);
        $header = $header[0];

        return $this->parseHeaderCells($header);
    }//end parseTableHeader()


    /**
     * Parse table header cells
     *
     * @param string[] $header array of header rows
     *
     * @return string[]
     */
    protected function parseHeaderCells(array $header): array
    {
        $cells = [];
        $regex = '/^\s*!\s*(.+?)\s*?$/imu';
        foreach ($header as $idx => $row) {
            preg_match_all($regex, $row, $cells[$idx]);
            $cells[$idx] = $cells[$idx][1];
        }//end foreach

        return $cells;
    }//end parseTableHeaderCells()


    /**
     * Parse table rows
     *
     * @return string[]
     */
    protected function parseRows(): array
    {
        $regex = '/^\s*\|-\s*.+?\n(?:\s*\|\s*.+?$)+/imu';
        preg_match_all($regex, $this->wikiText, $header);
        $header = $header[0];

        return $this->parseCells($header);
    }//end parseTableRow()


    /**
     * Parse table cells
     *
     * @param string[] $rows array of table rows
     *
     * @return string[]
     */
    protected function parseCells($rows): array
    {
        $cells = [];
        $regex = '/^\s*\|\s*(.+?)\s*?$/imu';
        foreach ($rows as $idx => $row) {
            preg_match_all($regex, $row, $cells[$idx]);
            $cells[$idx] = $cells[$idx][1];
        }//end foreach

        return $cells;
    }//end parseTableCell()
}//end class
